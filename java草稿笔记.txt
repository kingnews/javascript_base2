

问题一: 第41讲子弹最多只能连发5颗,循环出错;



演示  jdk的安装和配置
 
 1.安装
 2.配置
 添加环境变量即可

 编写一个Hello.java
 编译Hello.java       javac Hello.java


virtual machine       虚拟机





//第二讲








//第三讲

VOID

表示空类型，它跟int，float是同地位的，一般用在没有返回值的函数中，比如你写void main ()，主函数完了不用写return 语句，
但是如果是int main ()或者是main ()，你不写return 语句它就会有warning

用在函数名前，表示没有返回值
用在函数参数列表中，表示没有形参
用在指针前，表示指针可以指向任何类型




//int a=90;
//a++;  ->a=a+1;


int b=++a;
(
    a=a+1;      //先处理自己的事情
    b=a;        //再赋值
)

int b=a++;
 (
    b=a;      //先赋值
    a=a+1;    //再处理自己的事情

  )


 int a=3;
 int b=++((++a)--);







//第四讲







//第五讲






//第六讲
创建一个对象有两种方法
1.先声明再创建
①对象声明: 类名 对象名
②对象创建: 对象名=new 类名()
Cat cat1;
cat1=new Cat();


2.一步到位法
类名 对象名=new 类名();
Cat cat1=new Cat();





//第七讲


* 类的构造方法小结
 ①构造方法名和类名相同
 ②构造方法没有返回值
 ③主要作用是完成对新对象的初始化
 ④在创建新对象时，系统自动的调用该类的构造方法
 ⑤一个类可以有多个构造方法
 ⑥每个类都有一个默认的构造方法









//第八讲

 this.age=age;
 this.name=name;

this是属于一个具体的对象，不是属于一个类的


System.out.print("共有="+ch2.total);  //total是静态变量，因此它可以被任何一个对象访问    也可以通过Child.total的方式进行访问;前提变量是静态变量才可以通过类名去访问.





//第九讲

com.xiaoming            .代表再分一层  com.xiaoming    代表我建的一个包      包名都是小写，不要大写，包名最好不要超过5层；


 
//第十讲





//第十一讲






//第十二讲







//第十三讲





//第十四讲

前期绑定:在程序运行之前进行绑定，由编译器和连接程序实现，又叫做静态绑定。比如static方法和final方法，注意，这里也包括private方法，因为它是隐式final的。

后期绑定:在运行时根据对象的类型进行绑定，由方法调用机制实现，因此又叫做动态绑定，或者运行时绑定。除了前期绑定外的所有方法都属于后期绑定。






//第十五讲








//第十六讲

数组
①数组的定义
数据类型 数组名[]=new 数据类型[大小]
int a[]=new int[5];
说明:这是定义数组的一种方法。

②数组的引用(使用)
数组名[下标] 比如:你要使用a数组的第三个数  a[2]



//初始化数组
//数组类型 数组名={元素值,元素值.....}
//float arr[]={3,5,1,3.4f,2,50}
		





//第十七讲
数组-小结
①数组可存放同一类型数据
②简单数据类型(int,float)数组，可直接赋值.
③对象数组在定义后，赋值时需要再次为每个对象分配空间[即:new 对象]
④数组大小必须事先指定
⑤数组名可以理解为指向数组首地址的引用.
⑥数组的下标是从0开始编号的.




排序的介绍
排序是将一群数据，依指定的顺序进行排列的过程。
排序的分类:
①内部排序:
 指将需要处理的所有数据都加载到内部存储器中进行排序。
包括(交换式排序法、选择式排序法和插入式排序法)

②外部排序法:
数据量过大，无法全部加载到内存中，需要借助外部存储进行排序。包括(合并排序法和直接合并排序法)。










//第十八讲

 








//第十九讲

 * 多维数组-二维数组
多维数组我们只介绍二维数组。
①定义
语法:
类型 数组名[][]=new 类型[大小][大小]
比如: int a[]=new int[2][3]
②分析
二维数组在内存中存在的形式
③案例，请用二维数组输出如下图型
0 0 0 0 0 0 
0 0 1 0 0 0 
0 2 0 3 0 0 
0 0 0 0 0 0 





//第二十讲
在计算机世界里是以补码的方式进行运算的，但是我们要看结果是以原码的方式来看的





//第二十一讲
>>>    逻辑右移，运算规则是:低位溢出，高位补0
3>>>2







//第二十二讲








//第二十三讲








//第二十四讲
1通过此题练习对List,Map,Set的不同

大圣准备带小猴去练操，但是队伍是在太不成队伍，非常不满，唐僧建议用java里面的容器和接口去装小猴，
重新组织队伍

第一关
  设计程序，使用List接口来容纳10只猴

第二关:
  用Set来装载10只猴，对他们可以执行查找和替换功能

 三关:用Map接口来装载10只猴，对他们执行最快的查找的和替换功能


如果做一个词典(英汉)，不能用数据库，你会怎样实现








//第二十五讲









//第二十六讲






//第二十七讲






//第二十八讲






//第二十九讲









//第三十讲








//第三十一讲





//第三十二讲

//35min


//第三十三讲
图像搜索引擎





//第三十四讲
可读性和代码复用性









//第三十五讲











//第三十六讲








//第三十七讲








//第三十八讲









//第三十九讲






//第四十讲






//第四十一讲

问题:子弹偶数连发,暂时没找到问题;

在一个函数里面改变的,会导致另一个函数里面对象变化









//第四十二讲

如果你的这个类在创建过后，坐标在一定时间是变化的，可以考虑做成一个线程
而炸弹不存在，所以不应该做成一个线程类;



问题一:子弹偶数连发,暂时没找到问题;
问题二:第一课子弹击中敌人坦克没有爆炸效果;


*image1=ImageIO.read(new File("src\\1.png"));
 *image2=ImageIO.read(new File("src\\2.png"));
 *image3=ImageIO.read(new File("src\\3.png"));
 *没有加上src就会报错,但是韩老师在视频里面是没有加的;






//第四十三讲








//第四十四讲






//第四十五讲






//第四十六讲









//第四十七讲

敌人坦克之间还是有点小bug





//第四十八讲






//第四十九讲








//第五十讲






//第五十一讲








//第五十二讲


*****    重写和重载的区别

重写是子类的方法覆盖父类的方法，要求方法名和参数都相同

重载是在同一个类中的两个或两个以上的方法，拥有相同的方法名，但是参数却不相同，方法体也不相同，最常见的重载的例子就是类的构造函数，可以参考API帮助文档看看类的构造方法


1.重写必须继承，重载不用。
2.重写的方法名，参数数目相同，参数类型兼容，重载的方法名相同，参数列表不同。
3.重写的方法修饰符大于等于父类的方法，重载和修饰符无关。
4.重写不可以抛出父类没有抛出的一般异常，可以抛出运行时异常









//第五十三讲





//第五十四讲







//第五十五讲

完




//第五十六讲







//第五十七讲









//第五十八讲









//第五十九讲









//第六十讲





//第六十一讲






//第六十二讲









//第六十三讲











//第六十四讲








//第六十五讲






//第六十六讲









//第六十七讲








//第六十八讲

cvs,svn 管理代码








//第六十九讲










//第七十讲










//第七十一讲

	String stuId=(String)sm.getValueAt(rowNum, 0);      //有问题?


  new StuUpdDialog(this, "修改学生", true, sm, rowNum);   //有问题?





//第七十二讲






//第七十三讲









//第七十四讲













//第七十五讲











//第七十六讲









//第七十七讲









//第七十八讲











//第七十九讲









//第八十讲









//第八十一讲









//第八十二讲






//第八十三讲









//第八十四讲

tracert ..........








//第八十五讲












//第八十六讲








//第八十七讲











//第八十八讲









//第八十九讲












//第九十讲









//第九十一讲











//第九十二讲










//第九十三讲











//第九十四讲


















































